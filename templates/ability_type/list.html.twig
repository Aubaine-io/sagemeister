{% set abilityTypeList = abilityTypes ?? [] %}

{% extends 'base.html.twig' %}
{% block title %}List Ability Types{% endblock %}

{% block body %}
    <div class="flex flex-col justify-center items-center gap-3">
    {% for abilityType in abilityTypeList %}
        <div
            style="background-color: {{ abilityType.color }};"
            class="flex flex-row items-center gap-3 rounded w-4/6 px-8 py-4 text-xl text-white"
        >
            <div id="ability_type_icon" data-icon-text="{{ abilityType.icon }}">
            </div>
            <div>
                {{ abilityType.name | capitalize }}
            </div>
        </div>
    {% endfor %}
    </div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener("DOMContentLoaded", function() {
        const defaultSvg = `<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><g fill="none"><path d="M24 0v24H0V0zM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035q-.016-.005-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427q-.004-.016-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093q.019.005.029-.008l.004-.014l-.034-.614q-.005-.019-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014l-.034.614q.001.018.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z"/><path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2m0 14a1 1 0 1 0 0 2a1 1 0 0 0 0-2m0-9.5a3.625 3.625 0 0 0-3.625 3.625a1 1 0 1 0 2 0a1.625 1.625 0 1 1 2.23 1.51c-.676.27-1.605.962-1.605 2.115V14a1 1 0 1 0 2 0c0-.244.05-.366.261-.47l.087-.04A3.626 3.626 0 0 0 12 6.5"/></g></svg>`
        const iconElements = document.querySelectorAll("div[id='ability_type_icon']");

        for (let index = 0; index < iconElements.length; index++) {
            const iconElement = iconElements[index];
            const iconText = iconElement.dataset.iconText;

            const iconifyApiUrl = `https://api.iconify.design/${iconText}.svg`;

            fetch(iconifyApiUrl)
                .then(response => {
                    const content = response.text()
                        .then(content => {
                            if (content === "404") {
                                return defaultSvg;
                            }

                            return content;
                        }).then(svg => {
                            iconElement.innerHTML = svg;
                        })
                }).catch(error => {
                    console.error("Error fetching icon:", error);

                    // Display a default SVG in case of error
                    iconElement.innerHTML = defaultSvg;
                });
        }
    });
</script>
{% endblock %}
